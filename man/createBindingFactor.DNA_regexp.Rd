% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createBindingFactor.DNA_regexp.R
\name{createBindingFactor.DNA_regexp}
\alias{createBindingFactor.DNA_regexp}
\title{Create a binding factor object to match a given pattern of layers}
\usage{
createBindingFactor.DNA_regexp(
  name,
  type = "DNA_regexp",
  patternString = "N",
  patternLength = 0,
  profile.layers = NULL,
  profile.marks = NULL,
  mod.layers = NULL,
  mod.marks = NULL,
  offset = 0,
  offset.method = NULL,
  offset.params = NULL,
  stateWidth = patternLength,
  test.layer0.binding = FALSE,
  test.mismatch.rate = 0.1,
  max.pattern.tries = 1000,
  min.DM.length = 2,
  min.DR.length = 10,
  verbose = FALSE
)
}
\arguments{
\item{name}{give the binding factor a name}

\item{type}{"DNA_regexp"  to differentiate from other types}

\item{patternString}{= NOT USED in this case}

\item{patternLength}{[= 0] length of pattern}

\item{profile.layers}{a vector of named layers to set as a match}

\item{profile.marks}{a vector of 0/1 to match the layers in profile.layers}

\item{mod.layers}{a vector of named layers to alter on a match}

\item{mod.marks}{a vector of 0/1 to set on the mod.layers}

\item{offset}{0  integer value to indicate relative distance from pattern to apply modifications. Very simple.}

\item{offset.method}{NULL   a \code{function} to apply to apply offset. MUST have parameter "n" that is used internally to represent the number of hits.}

\item{offset.params}{NULL  a \code{list} of named parameters to pass to offset.method function}

\item{stateWidth}{the width of pattern to recognise on other layers}

\item{test.layer0.binding}{when creating, test if the DNA sequence has a match.}

\item{test.mismatch.rate}{proportion of mismatches to tolerate when testing}

\item{max.pattern.tries}{NA}

\item{min.DM.length}{NA}

\item{verbose}{set to TRUE for more output}

\item{min.DR.lengt}{NA}
}
\value{
\code{"hits"}
}
\description{
Create a new binding factor based on a simple pattern of 
marks on others layers and \emph{may} (when used) set marks on other layers.
}
\examples{
simpleBF <- createBindingFactor.DNA_regexp("test", patternString="ACTGGGCTA")

# this regular expression finds 4 CpGs with 0-4 bases between them
CGI<- createBindingFactor.DNA_regexp("CGI", patternString="(CG.{0,4}){3}CG", 
                          patternLength=20, mod.layers = "CpG_island",
                          mod.marks=1, stateWidth=20)

}
\seealso{
\code{\link{runLayerBinding}} \code{\link{createBindingFactor.DNA_motif}}
}
